DROP DATABASE PROJECT;
create database PROJECT;
use PROJECT;

/*CREATE THE TABLE WITH THE INFO FROM THE JSON FILE FROM PYTHON*/
CREATE TABLE PLAYER_STATS(

GAME_DTE			VARCHAR(30),
GAMEWEEK			INTEGER,
OPPOSITION			VARCHAR(30),
MINS_PLYD			INTEGER,
GOALS_SCORED		INTEGER,
ASSISTS				INTEGER,
CLEAN_SHEET			INTEGER,
GOALS_CONCEDED		INTEGER,
OWN_GOALS			INTEGER,
PENALTIES_SAVED		INTEGER,
PENALTIES_MISSED	INTEGER,
YELLOW_CARDS		INTEGER,
RED_CARDS			INTEGER,
SAVES				INTEGER,
BONUS				INTEGER,
EA_PPI				INTEGER,
BONUS_POINTS_SYS	INTEGER,
NET_TRANSFERS		INTEGER,
PLAYER_VALUE		INTEGER,
POINTS				INTEGER,
PLAYER_NAME			VARCHAR(50),
TEAM_NAME			VARCHAR(30),
POSITION			VARCHAR(30),
SELECTED_BY			VARCHAR(5),
PRICE				INTEGER,
PLAYER_ID			INTEGER
)
;

LOAD DATA LOCAL INFILE "C:/Users/Gibbo/Documents/Data Analytics/Project/Python/player_history.txt"
INTO TABLE PLAYER_STATS
COLUMNS TERMINATED BY ','
;

/*DELETE THE ENTRY RELATING TO GARETH BALE*/
delete from PLAYER_STATS where player_name = 'Gareth Bale'
;

/*MODIFY THE OPPOSITION FIELD FROM THE PLAYER_STATS TABLE TO SHOW RESULTS IN CORRECT FORMAT*/

CREATE TABLE PLAYER_HISTORY
AS
(
SELECT
GAME_DTE,
GAMEWEEK,
SUBSTRING(TRIM(OPPOSITION), 1, 3) AS OPPOSITION,
SUBSTRING(TRIM(OPPOSITION), 5, 1) AS HOME_AWAY,
SUBSTRING(TRIM(OPPOSITION), 8, 3) AS SCORE,

CASE WHEN SUBSTRING(TRIM(OPPOSITION), 8, 1) > SUBSTRING(TRIM(OPPOSITION), 10, 1) THEN 'WIN'
	 WHEN SUBSTRING(TRIM(OPPOSITION), 8, 1) < SUBSTRING(TRIM(OPPOSITION), 10, 1) THEN 'LOSE'
	 ELSE 'DRAW'
END AS MATCH_OUTCOME,

MINS_PLYD			,
GOALS_SCORED		,
ASSISTS				,
CLEAN_SHEET			,
GOALS_CONCEDED		,
OWN_GOALS			,
PENALTIES_SAVED		,
PENALTIES_MISSED	,
YELLOW_CARDS		,
RED_CARDS			,
SAVES				,
BONUS				,
EA_PPI				,
BONUS_POINTS_SYS	,
NET_TRANSFERS		,
PLAYER_VALUE		,
POINTS				,
PLAYER_NAME			,
TEAM_NAME			,
POSITION			,
CAST(SELECTED_BY AS DECIMAL(3,1)) AS SELECTED_BY,
PRICE				,
PLAYER_ID			

FROM PLAYER_STATS
)
;

/*CREATE THE LEAGUE TABLE TABLE*/
CREATE TABLE LEAGUE_TABLE
(
POSITION			INTEGER,
TEAM_NAME			VARCHAR(30),
GAMES_PLAYED		INTEGER,
POINTS				INTEGER
)
;

LOAD DATA LOCAL INFILE "C:/Users/Gibbo/Documents/Data Analytics/Project/Python/league_table.txt"
INTO TABLE LEAGUE_TABLE
COLUMNS TERMINATED BY ','
;

/*CREATE THE FIXTURES/RESULTS TABLE SCRAPED FROM PYTHON*/
CREATE TABLE FIXTURES
(
GAMEWEEK			INTEGER,
HOME_TEAM			VARCHAR(30),
SCORE				VARCHAR(10),
AWAY_TEAM			VARCHAR(30)
)
;

LOAD DATA LOCAL INFILE "C:/Users/Gibbo/Documents/Data Analytics/Project/Python/fixtures.txt"
INTO TABLE FIXTURES
COLUMNS TERMINATED BY ','
;

/*MODIFY THE ABOVE TABLE TO SHOW GAMES PLAYED AND REMAINING GAMES*/
CREATE TABLE FIXTURE_STATUS
AS
(
SELECT GAMEWEEK,
		HOME_TEAM,
		SCORE,
		AWAY_TEAM,
		CASE WHEN SCORE LIKE ('%0%')
			OR SCORE LIKE ('%1%')
			OR SCORE LIKE ('%2%')
			OR SCORE LIKE ('%3%')
			OR SCORE LIKE ('%4%')
			OR SCORE LIKE ('%5%')
			OR SCORE LIKE ('%6%')
			OR SCORE LIKE ('%7%')
			OR SCORE LIKE ('%8%')
			OR SCORE LIKE ('%9%') THEN 'RESULT' ELSE 'TBP' END AS STATUS
		
FROM FIXTURES
)
;


CREATE TABLE TEAM(
TEAM_NAME			VARCHAR(30),
TEAM_ABBRV			CHAR(3)
)
;

INSERT INTO TEAM VALUES('Arsenal', 'ARS');
INSERT INTO TEAM VALUES('Crystal Palace', 'CRY');
INSERT INTO TEAM VALUES('Aston Villa', 'AVL');
INSERT INTO TEAM VALUES('Stoke City', 'STK');
INSERT INTO TEAM VALUES('Fulham', 'FUL');
INSERT INTO TEAM VALUES('Cardiff City', 'CAR');
INSERT INTO TEAM VALUES('Chelsea', 'CHE');
INSERT INTO TEAM VALUES('Man Utd', 'MUN');
INSERT INTO TEAM VALUES('Liverpool', 'LIV');
INSERT INTO TEAM VALUES('Everton', 'EVE');
INSERT INTO TEAM VALUES('West Brom', 'WBA');
INSERT INTO TEAM VALUES('Hull City', 'HUL');
INSERT INTO TEAM VALUES('West Ham', 'WHU');
INSERT INTO TEAM VALUES('Sunderland', 'SUN');
INSERT INTO TEAM VALUES('Man City', 'MCI');
INSERT INTO TEAM VALUES('Newcastle', 'NEW');
INSERT INTO TEAM VALUES('Norwich', 'NOR');
INSERT INTO TEAM VALUES('Southampton', 'SOU');
INSERT INTO TEAM VALUES('Swansea', 'SWA');
INSERT INTO TEAM VALUES('Tottenham', 'TOT');


/*TEAM LEVEL VIEW OF THE REMAINING FIXTURES*/
CREATE TABLE FIXTURES_REMAINING
AS
(
SELECT FIX.GAMEWEEK,
		TM.TEAM_NAME,
		CASE WHEN TM.TEAM_NAME = FIX.HOME_TEAM THEN AWAY_TEAM ELSE HOME_TEAM END AS OPPOSITION,
		CASE WHEN TM.TEAM_NAME = FIX.HOME_TEAM THEN 'H' ELSE 'A' END AS HOME_OR_AWAY
		

		
FROM FIXTURES						FIX

LEFT JOIN TEAM						TM
ON TM.TEAM_NAME = FIX.HOME_TEAM
or TM.TEAM_NAME = FIX.AWAY_TEAM

WHERE SCORE LIKE '%V%'
)
;

CREATE TABLE PLAYER_POINTS
AS
(
SELECT PLAYER_NAME
		,SUM(POINTS) AS TOT_POINTS

FROM PLAYER_STATS

GROUP BY 1
)
;
		
		

/*source C:\Users\Gibbo\Documents\Data Analytics\Project\Mysql\stats.sql*/
